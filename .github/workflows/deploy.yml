# This is a basic workflow to help you get started with Actions

name: Deploy

# Controls when the workflow will run
on:
  push:
    tags:
      - '*.*.**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: Setup Java JDK
        uses: actions/setup-java@v3.1.1
        with:
          # The Java version to set up. Takes a whole or semver Java version. See examples of supported syntax in README file
          java-version: 17
          # Java distribution. See the list of supported distributions in README file
          distribution: zulu

      - name: Generate Changelog
        run: |
          ./gradlew generateChangelog
          ./gradlew createGithubReleaseNotes
        env: # Or as an environment variable
          GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}

      # Runs a set of commands using the runners shell
      - name: Deploy EAP to JetBrains Plugin Repository
        run: ./gradlew publishPlugin -Dchannels=eap
        if: contains(github.ref,'eap')
        env: # Or as an environment variable
          token: ${{ secrets.JB_TOKEN }}
          GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}
        
      - name: Deploy Release to JetBrains Plugin Repository
        run: ./gradlew publishPlugin
        if: contains(github.ref,'eap') == false
        env: # Or as an environment variable
          token: ${{ secrets.JB_TOKEN }}
          GH_TOKEN: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          TAG: ${{ github.ref_name }}

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body_path: githubReleaseNote.md
          # note you'll typically need to create a personal access token
          # with permissions to create releases in the other repo
          token: ${{ secrets.CUSTOM_GITHUB_TOKEN }}
          prerelease: ${{ contains(github.ref,'eap') }}
          files: build/distributions/JsonToKotlinClass*.zip
        env:
          GITHUB_REPOSITORY: wuseal/JsonToKotlinClass
          
